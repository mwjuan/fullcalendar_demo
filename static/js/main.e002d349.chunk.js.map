{"version":3,"sources":["ReactBigCalendar.js","index.js"],"names":["moment","locale","week","dow","localizer","momentLocalizer","ReactBigCalendar","eventsData","setEventsData","useState","currentView","setView","currentDate","setDate","toDate","_jsx","className","children","Calendar","defaultView","selectable","date","events","style","height","onSelectEvent","event","alert","JSON","stringify","onSelectSlot","_ref","start","end","title","window","prompt","components","toolbar","_ref2","onView","views","day","month","currentMoment","Date","parse","_jsxs","display","justifyContent","margin","Button","borderRadius","border","marginRight","width","onClick","icon","LeftOutlined","timestamp","clone","add","RightOutlined","format","_","map","Object","keys","p","concat","value","flexDirection","alignContent","alignItems","position","top","left","Tooltip","marginLeft","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sRAUAA,IAAOC,OAAO,QAAS,CAAEC,KAAM,CAAEC,IAAK,KACtC,MAAMC,EAAYC,YAAgBL,KAEnB,SAASM,IACtB,MAAOC,EAAYC,GAAiBC,mBAAS,KACtCC,EAAaC,GAAWF,mBAAS,UACjCG,EAAaC,GAAWJ,mBAAST,MAASc,UAgEjD,OACEC,cAAA,OAAKC,UAAU,MAAKC,SAClBF,cAACG,IAAQ,CACPC,YAAaT,EACbU,YAAU,EACVhB,UAAWA,EACXiB,KAAMT,EACNU,OAAQf,EACRgB,MAAO,CAAEC,OAAQ,SACjBC,cAAgBC,GAAUC,MAAMC,KAAKC,UAAUH,IAC/CI,aAxEeC,IAAqB,IAApB,MAAEC,EAAK,IAAEC,GAAKF,EAClC,MAAMG,EAAQC,OAAOC,OAAO,kBACxBF,GACF1B,EAAc,IACTD,EACH,CACEyB,QACAC,MACAC,UAEF,EA+DAG,WAAY,CACVC,QA7DgBC,IAAiB,IAAhB,OAAEC,GAAQD,EACjC,MAAME,EAAQ,CAAEC,IAAK,SAAKxC,KAAM,SAAKyC,MAAO,UACtCC,EAAgB5C,IAAO6C,KAAKC,MAAMlC,IACxC,OAAOmC,eAAA,OAAKxB,MAAO,CAAEyB,QAAS,OAAQC,eAAgB,gBAAiBC,OAAQ,UAAWjC,SAAA,CACxF8B,eAAA,OAAK/B,UAAU,oDAAmDC,SAAA,CAChEF,cAACoC,IAAM,CAAC5B,MAAO,CAAE6B,aAAc,EAAGC,OAAQ,mCAAoCC,YAAa,GAAIC,MAAO,GAAI/B,OAAQ,IAChHgC,QAASA,IAAM3C,EAAQb,MAASc,UAAUG,SAC3C,iBAGDF,cAACoC,IAAM,CAACnC,UAAU,WAAWyC,KAAM1C,cAAC2C,IAAY,IAC9CF,QAASA,KACP,IAAIG,EAAYd,KAAKC,MAAMlC,GAC3BC,EAAQb,IAAO2D,GAAWC,QAAQC,IAAI,OAAQ,GAAG/C,SAAS,IAG9DC,cAACoC,IAAM,CAACnC,UAAU,YAAYyC,KAAM1C,cAAC+C,IAAa,IAChDN,QAASA,KACP,IAAIG,EAAYd,KAAKC,MAAMlC,GAC3BC,EAAQb,IAAO2D,GAAWC,QAAQC,IAAI,MAAO,GAAG/C,SAAS,IAG7DC,cAAA,QAAMC,UAAU,YAAWC,SAAkB,QAAhBP,EAAwBkC,EAAcmB,OAAO,8BAAiBnB,EAAcmB,OAAO,6BAElHhD,cAAA,OAAKC,UAAU,oBAAmBC,SAE9B+C,IAAEC,IAAIC,OAAOC,KAAK1B,IAAQ2B,GACjBrD,cAAA,OAELC,UAAS,oEAAAqD,OAAsE3D,IAAgB0D,EAAI,cAAgB,IACnHZ,QAASA,KAAQ7C,EAAQyD,GAAI5B,EAAO4B,EAAE,EAAInD,SACzCwB,EAAM2B,IAHFA,SAQT,EA0BA1C,MAvBa4C,GACZvB,eAAA,OAAK/B,UAAW,GAAIO,MAAO,CAAEyB,QAAS,OAAQuB,cAAe,MAAOC,aAAc,SAAUC,WAAY,UAAWxD,SAAA,CACvG,UAAhBP,GAA2BK,cAAA,OAAKC,UAAU,cAC1B,UAAhBN,GAA2BK,cAAA,OAAKC,UAAU,gBAAgBO,MAAO,CAAEC,OAAQ,OAAQkD,SAAU,WAAYC,IAAK,EAAGC,KAAM,KACxH7D,cAAC8D,IAAO,CAAC3C,MAAOoC,EAAMpC,MAAMjB,SAC1BF,cAAA,OAAKQ,MAAO,CAAEuD,WAA4B,UAAhBpE,EAA0B,GAAK,GAAIO,SAAEqD,EAAMpC,iBAuB7E,CC9FA,MAAM6C,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPpE,cAACT,EAAgB,IACjByE,E","file":"static/js/main.e002d349.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons'\nimport { Button, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn'\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport './style.css';\nimport _ from 'lodash';\n\nmoment.locale('zh-cn', { week: { dow: 0 } })\nconst localizer = momentLocalizer(moment);\n\nexport default function ReactBigCalendar() {\n  const [eventsData, setEventsData] = useState([]);\n  const [currentView, setView] = useState('month');\n  const [currentDate, setDate] = useState(moment().toDate());\n\n  const handleSelect = ({ start, end }) => {\n    const title = window.prompt(\"New Event name\");\n    if (title)\n      setEventsData([\n        ...eventsData,\n        {\n          start,\n          end,\n          title\n        }\n      ]);\n  };\n\n  const CalendarToolbar = ({ onView }) => {\n    const views = { day: '日', week: '周', month: '月' }\n    const currentMoment = moment(Date.parse(currentDate));\n    return <div style={{ display: 'flex', justifyContent: 'space-between', margin: '16px 0' }}>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <Button style={{ borderRadius: 8, border: '1px solid rgba(217, 217, 217, 1)', marginRight: 24, width: 64, height: 40 }}\n          onClick={() => setDate(moment().toDate())}\n        >\n          今天\n        </Button>\n        <Button className=\"date-pre\" icon={<LeftOutlined />}\n          onClick={() => {\n            let timestamp = Date.parse(currentDate)\n            setDate(moment(timestamp).clone().add('day', -1).toDate())\n          }}\n        />\n        <Button className=\"date-next\" icon={<RightOutlined />}\n          onClick={() => {\n            let timestamp = Date.parse(currentDate)\n            setDate(moment(timestamp).clone().add('day', 1).toDate())\n          }}\n        />\n        <span className=\"date-show\">{currentView === 'day' ? currentMoment.format('YYYY年MM月DD日') : currentMoment.format('YYYY年  MM月')}</span>\n      </div>\n      <div className=\"d-flex date-group\">\n        {\n          _.map(Object.keys(views), p => {\n            return <div\n              key={p}\n              className={`date-group-item d-flex justify-content-center align-items-center ${currentView === p ? 'active-item' : ''}`}\n              onClick={() => { setView(p); onView(p); }}>\n              {views[p]}\n            </div>\n          })\n        }\n      </div>\n    </div>\n  };\n\n  const CustomEvent = (value) => {\n    return <div className={''} style={{ display: 'flex', flexDirection: 'row', alignContent: 'center', alignItems: \"center\" }}>\n      {currentView === 'month' && <div className=\"item-left\"></div>}\n      {currentView !== 'month' && <div className=\"item-nonMonth\" style={{ height: '100%', position: 'absolute', top: 0, left: 0 }}></div>}\n      <Tooltip title={value.title}>\n        <div style={{ marginLeft: currentView !== 'month' ? 10 : 0 }}>{value.title}</div>\n      </Tooltip>\n    </div>\n  }\n\n  return (\n    <div className=\"App\">\n      <Calendar\n        defaultView={currentView}\n        selectable\n        localizer={localizer}\n        date={currentDate}\n        events={eventsData}\n        style={{ height: \"100vh\" }}\n        onSelectEvent={(event) => alert(JSON.stringify(event))}\n        onSelectSlot={handleSelect}\n        components={{\n          toolbar: CalendarToolbar,\n          event: CustomEvent\n        }}\n      />\n    </div>\n  );\n}","import ReactDOM from \"react-dom\";\n\nimport ReactBigCalendar from \"./ReactBigCalendar\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <ReactBigCalendar />,\n  rootElement\n);\n"],"sourceRoot":""}